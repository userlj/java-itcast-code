程序流程控制是需要语言来完成的。
1，判断结构。

	if语句：
	三种格式：
	其中第二种格式if(条件表达式)else
	该种可以简写成三元运算符。？：
	简写和全写区别：
	只有当if else判断完返回结果时，才可以写成简写格式。

	好处：增强了代码的阅读性，简化了代码的书写。
	而且只要是运算符，都会有运算结果。

	只要有if后面一定有条件表达式，而条件表达式，运算后一定有boolean类型的值出现。



2，选择结构。
	
	swtich语句；
	特点：
	1，被选择值只能是四种类型 byte,short,int char.
	2，case和default之间是没有顺序的。
	3，运行switch语句肯定先读第一个case，将所以case都执行完也没有匹配结果时，才会读default。
	4，switch语句只有两种情况，1，读到break语句，2，读到switch语句结束。


3，循环结构。
	while  ， do while，for。
	do while：无论条件是否满足，循环体至少执行一次。

	for：初始化表达式只执行一次，循环在条件表达式，循环体，循环后的操作表达式三者间循环。

	for(int x=0; x<3; x++)
	{
		System.out.println("x="+x);
	}

	int y=0;
	for( ; y<3; )
	{
		System.out.println("y="+y);
		y++;
	}

	for(;;)
	{
		System.out.println("yes");
	}

	while(true)
	{
	
	}



开发时，什么时候该用什么语句呢？

对于if和switch。都可以用于判断。
当对于几个值进行判断，可以if可以用switch建议switch，因为相对高效。

但对范围进行判断时，用if。

当对运算后结果是boolean型是也用if。

什么时候用循环呢？
当某些语句需要执行很多次的时候，使用循环结构。

使用循环需要注意：
1，控制循环条件，
2，哪些语句需要参与循环哪些不需要一定要先明确。


编程思想：
1，累加思想：
	原理：
	其实就是通过一个变量记录不断累加后的结果。在进行下一次的累加。
	还有需要进行程序自动化，也就是循环。
	int sum = 0;
	for(int x=1; x<=100; x++)
	{
		sum+=x;
	}
	System.out.println("sum="+sum);

2，计数器思想：
	原理：
	其实就是定义一个变量，在满足某一条后，对该变量进行一定步长的变化。
	也需要通过循环来完成。
	int count = 0;
	for(int x=1; x<=100; x++)
	{
		if(x%6==0)
			count++;

	}
	System.out.println("count="+count);

3，大圈套小圈思想。
	原理：
	外面执行一次，里面就执行n次。这个过程在重复。
	*
	**
	***
	****
	for(int x=0; x<4;x++)
	{
		for(int y=0 ; y<=x; y++ )
		{
			System.out.print("*");
		}
		System.out.println();
	}




while和for异同点：
1，while和for是可以互换的。
2，对于循环通常会定义增量。
	while循环后，该变量还在内存中，for循环变量会在循环后消失在内存中。
	int x = 1;
	while(x<3)
	{
		System.out.println("x="+x);
		x++;
	}
	System.out.println(x);//这个x是可以被打印的，值为3。

	for(int y=1; y<3; y++)
	{
		System.out.println("y="+y);
	}
	System.out.println(y);//这条语句是编译失败的，因为y在循环后，已经消失，y的作用范围结束。

3，当变量被循环操作后，还要参与循环后的运算。使用while。



break，continue：
break：有自己作用的范围，switch语句，和循环语句。离开该范围，编译失败。
	用于跳出(结束)switch语句和循环语句。
continue ：作用范围只有循环。用于结束本次循环，继续下次循环。

当循环嵌套时，可以对循环进行标号的定义，就是给循环起名字，这样这两个语句就可以作用到指定的循环上。



